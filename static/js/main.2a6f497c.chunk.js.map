{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchField.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchField","placeholder","onChangeHandler","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGaA,EAAO,SAACC,GACpB,OACC,sBAAKC,UAAU,OAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJTC,EAAW,SAACR,GACxB,OACC,8BACC,qBAAKC,UAAU,WAAf,SACED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,YCN1CM,EAAc,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,gBACzC,OACC,8BAEA,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,OCuC5CG,E,kDAtCb,aAAgB,IAAD,8BACb,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJF,E,qDAOf,WAAsB,IAAD,OACnBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAI1C,WAAS,IAAD,OAEN,EAAgCE,KAAKR,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEpG,OACE,sBAAK3B,UAAU,MAAf,UACC,sBAAKA,UAAU,MAAf,UACD,0CAEO,cAAC,EAAD,CAAaa,KAAK,SAASF,YAAY,iBAAiBC,gBAAiB,SAAAiB,GAAK,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,cAM1H,cAAC,EAAD,CAAUvB,SAAYiB,W,GA/BVO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2a6f497c.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\n\r\nexport const Card = (props) => {\r\n return (\r\n  <div className='card'>\r\n   <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`}></img>\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Card\r\n\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport {Card} from './Card'\r\n\r\nexport const CardList = (props) => {\r\n return (\r\n  <div>\r\n   <div className='cardList'>\r\n    {props.monsters.map(monster => (<Card key={monster.id} monster= {monster}></Card>))}\r\n     \r\n      </div>\r\n    \r\n  </div>\r\n )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nexport const SearchField = ({placeholder, onChangeHandler}) => {\r\n return (\r\n  <div>\r\n   \r\n  <input type=\"search\" placeholder={placeholder} onChange={onChangeHandler} />\r\n\r\n   \r\n  </div>\r\n )\r\n}\r\n\r\nexport default SearchField\r\n","\nimport './App.css';\nimport {Component} from 'react'\nimport {CardList} from './components/CardList'\nimport {SearchField} from './components/SearchField'\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n  }\n  componentDidMount () {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users => this.setState({monsters: users}))\n    \n\n  }\n  render(){\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()) )\n\n    return(\n      <div className=\"App\"> \n       <div className='top'>\n      <h1>Monsters</h1>\n     \n             <SearchField type=\"search\" placeholder=\"Search monster\" onChangeHandler={e=> {this.setState({searchField: e.target.value})\n     \n    }\n    \n    } />\n      </div>\n      <CardList monsters = {filteredMonsters}/>\n      </div>\n     \n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}